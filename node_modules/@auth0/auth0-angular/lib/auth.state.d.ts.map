{"version":3,"file":"auth.state.d.ts","sources":["auth.state.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Auth0Client } from '@auth0/auth0-spa-js';\n/**\n * Tracks the Authentication State for the SDK\n */\nexport declare class AuthState {\n    private auth0Client;\n    private isLoadingSubject$;\n    private refresh$;\n    private accessToken$;\n    private errorSubject$;\n    /**\n     * Emits boolean values indicating the loading state of the SDK.\n     */\n    readonly isLoading$: import(\"rxjs\").Observable<boolean>;\n    /**\n     * Trigger used to pull User information from the Auth0Client.\n     * Triggers when the access token has changed.\n     */\n    private accessTokenTrigger$;\n    /**\n     * Trigger used to pull User information from the Auth0Client.\n     * Triggers when an event occurs that needs to retrigger the User Profile information.\n     * Events: Login, Access Token change and Logout\n     */\n    private readonly isAuthenticatedTrigger$;\n    /**\n     * Emits boolean values indicating the authentication state of the user. If `true`, it means a user has authenticated.\n     * This depends on the value of `isLoading$`, so there is no need to manually check the loading state of the SDK.\n     */\n    readonly isAuthenticated$: import(\"rxjs\").Observable<boolean>;\n    /**\n     * Emits details about the authenticated user, or null if not authenticated.\n     */\n    readonly user$: import(\"rxjs\").Observable<import(\"@auth0/auth0-spa-js\").User | null | undefined>;\n    /**\n     * Emits ID token claims when authenticated, or null if not authenticated.\n     */\n    readonly idTokenClaims$: import(\"rxjs\").Observable<import(\"@auth0/auth0-spa-js\").IdToken | null | undefined>;\n    /**\n     * Emits errors that occur during login, or when checking for an active session on startup.\n     */\n    readonly error$: import(\"rxjs\").Observable<Error>;\n    constructor(auth0Client: Auth0Client);\n    /**\n     * Update the isLoading state using the provided value\n     * @param isLoading The new value for isLoading\n     */\n    setIsLoading(isLoading: boolean): void;\n    /**\n     * Refresh the state to ensure the `isAuthenticated`, `user$` and `idTokenClaims$`\n     * reflect the most up-to-date values from  Auth0Client.\n     */\n    refresh(): void;\n    /**\n     * Update the access token, doing so will also refresh the state.\n     * @param accessToken The new Access Token\n     */\n    setAccessToken(accessToken: string): void;\n    /**\n     * Emits the error in the `error$` observable.\n     * @param error The new error\n     */\n    setError(error: any): void;\n}\n"]}